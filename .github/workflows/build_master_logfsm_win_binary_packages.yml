name: LogFSM Build Windows Binary Package (Master) 

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  build_r_package:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
 
    - name: Read Version from R Package
      shell: bash      
      run: echo "VERSION=$(grep "Version:" r/DESCRIPTION | perl -pe '($_)=/([0-9]+([.][0-9]+)+)/')" >> $GITHUB_ENV    

    - name: Determine Shortened Hash 
      shell: bash      
      run: echo "HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV   
     
    - run: echo "Building Version $VERSION ($HASH)"
      shell: bash
 
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.400' 
        
    - name: Build Dotnet Worker 
      run: dotnet build vs/LogFSMCore.sln -c "Release LogFSM" --self-contained true -p:Version=${{ env.VERSION }}
      
    - name: Prepare Folders 1
      run: mkdir r/inst
      
    - name:  Prepare Folders 2
      run: mkdir r/inst/extdata
 
    - name: 'Publish Windows Worker 1'      
      run: mkdir r/inst/extdata/win-x64
      
    - name: 'Publish Windows Worker 2'   
      run: dotnet publish vs/LogFSMConsole/LogFSMConsole.csproj -c "Release LogFSM" -r win7-x64 -o "$GITHUB_WORKSPACE/r/inst/extdata/win-x64" -p:Version=${{ env.VERSION }}
 
    - name: Setup R Environment
      uses: r-lib/actions/setup-r@v2
      
    - name: Install Dependencies 
      run: Rscript -e "install.packages(c('rcmdcheck','knitr','dplyr', 'curl', 'jsonlite', 'XML', 'ggplot2', 'Rmisc', 'TraMineR', 'rmarkdown', 'rappdirs', 'testthat','magrittr','DiagrammeR','kableExtra'))"  
    
    - name: Install Pandoc
      uses: r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: '2.7.3'  
                    
    - name: Check R package
      run: Rscript -e "rcmdcheck::rcmdcheck(path='r/', args = '--no-manual', error_on = 'error')"
            
    - name: Build R Binary Package (Windows) 
      run: Rscript -e "pkgbuild::build(path='r', binary = TRUE)"
      shell: bash
      
    - uses: actions/upload-artifact@v3
      with:
        name: ${{format('Win_Binary_LogFSM_{0}.zip', env.VERSION)}}
        path: ${{format('LogFSM_{0}.zip', env.VERSION)}}
 
