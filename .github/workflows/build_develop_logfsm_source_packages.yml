name: LogFSM Build Source Package (Develop) 

on:
  push:
    branches:    
      - develop         

jobs:
  build_r_package:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
     
    - name: Read Version from R Package
      run: echo "$(grep "Version:" ${{ github.workspace }}/r/DESCRIPTION | perl -pe '($_)=/([0-9]+([.][0-9]+)+)/')"  >> $LOGFSM_VERSION_ENV
      shell: bash
 
    - name: Determine Shortened Hash 
      run: echo "$(git log --pretty=format:'%h' -n 1)" >> $LOGFSM_HASH_ENV  
  
    - run: echo "Building Version $LOGFSM_VERSION_ENV ($LOGFSM_HASH_ENV)"
      shell: bash
 
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.100' 
      
    - name: Build Dotnet Worker 
      run: dotnet build vs/LogFSMCore.sln -c "Release LogFSM" -p:Version=$LOGFSM_VERSION_ENV
      
    - name: Prepare Folders 1
      run: mkdir $GITHUB_WORKSPACE/r/inst
      
    - name:  Prepare Folders 2
      run: mkdir $GITHUB_WORKSPACE/r/inst/extdata
           
    - name: 'Publish Windows Worker 1'      
      run: mkdir $GITHUB_WORKSPACE/r/inst/extdata/win-x64
      
    - name: 'Publish Windows Worker 2'   
      run: dotnet publish vs/LogFSMCore.sln -c "Release LogFSM" -r win7-x64 -o "$GITHUB_WORKSPACE/r/inst/extdata/win-x64"
  
    - name: Setup R Environment
      uses: r-lib/actions/setup-r@master
      
    - name: Install Dependencies
      run: Rscript -e "install.packages(c('rcmdcheck','knitr','dplyr', 'curl', 'jsonlite', 'XML', 'ggplot2', 'Rmisc', 'TraMineR', 'rmarkdown', 'rappdirs', 'testthat','magrittr','DiagrammeR','kableExtra'))"  

    - name: Install Pandoc
      uses: r-lib/actions/setup-pandoc@v1
      with:
        pandoc-version: '2.7.3'  

    - name: Check R package
      run: Rscript -e "rcmdcheck::rcmdcheck(path='r/', args = '--no-manual', error_on = 'error')"            
            
    - name: Build R package (all worker)
      run: Rscript -e "pkgbuild::build(path='r/')"
 
    - uses: actions/upload-artifact@v1
      with:
        name: ${{format('Develop_Win_LogFSM_{0}_{1}.tar.gz', $LOGFSM_VERSION_ENV, $LOGFSM_HASH_ENV)}}
        path: ${{ github.workspace }}/${{format('LogFSM_{0}.tar.gz', $LOGFSM_VERSION_ENV)}}
        
   