install.packages("mirt")
install.packages("~/Dropbox/@LogFSM/rpackage/LogFSM_0.3.0.8.tar.gz", repos = NULL, type = "source")
pkgbuild::build
??pkgbuild::build
install.packages("C:/Users/kroehne/Dropbox/@LogFSM/rpackage/LogFSM_0.4.4.0.tar.gz", repos = NULL, type = "source")
library(LogFSM)
install.packages("C:/Users/kroehne/Downloads/LogFSM_0.4.4.0.tar.gz", repos = NULL, type = "source")
library(LogFSM)
library(LogFSM)
install_github("hadley/private", auth_token = "abc")
library(devtools)
install_github("hadley/private", auth_token = "abc")
install_github("kroehne/LogFSM", auth_token = "abc")
install_github("kroehne/LogFSM", auth_token = "3e0d3d5b386c2fd42480f52d7a698deeba849d39 ")
??remotes
remotes::install_url("https://github.com/kroehne/LogFSM/suites/423111782/artifacts/1378213")
remotes::install_local("C:/work/LogFSM_0.4.4.0.tar.gz")
?pkgbuild::build
library(remote)
source("http://logfsm.com/install.R")
source("http://logfsm.com/install.R")
source("http://logfsm.com/latest")
source("http://logfsm.com/install.R")
getwd()
rmarkdown::render_site(encoding = 'UTF-8')
library(LogFSM)
?LogFSM
??LogFSM
news(package="LogFSM")
print(news(package="LogFSM"))
getwd()
render(news.Rmd)
readtext("../r/NEWS")
read.file
readChar("../r/NEWS")
readLines("../r/NEWS")
cat(readLines("../r/NEWS"))
print(readLines("../r/NEWS"))
cat(paste0(readLines("../r/NEWS")m"\r\n")
cat(paste0(readLines("../r/NEWS"),"\r\n")
)
rmarkdown::render_site(encoding = 'UTF-8')
getwd()
rmarkdown::render_site(encoding = 'UTF-8')
warnings()
rmarkdown::render_site(encoding = 'UTF-8')
install_script <- "cat(\"LogFSM - Install\n\n\")"
install_script
install_script <- "cat('LogFSM - Install\n\n\')"
install_script
install_script <- c("cat('LogFSM - Install\n\n\')",
"list.of.packages <- c('remotes')",
"new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]",
"if(length(new.packages)) {",
"  cat(paste('Install package(s):',new.packages))",
"  install.packages(new.packages)",
"}")
install_script
install_script <- c("cat('LogFSM - Install\n\n\')",
"list.of.packages <- c('remotes')",
"new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]",
"if(length(new.packages)) {",
"  cat(paste('Install package(s):',new.packages))",
"  install.packages(new.packages)",
"}",
"osname <- Sys.info()['sysname']",
"ostype <- .Platform$OS.type",
"is64 <- Sys.info()[['machine']] == 'x86_64' || Sys.info()[['machine']] == 'x86-64'",
"if (!is64){ ",
"  cat(paste('LogFSM is not available for:',Sys.info()[['machine']],'\n'))",
"  cat('Installation failed.') ",
"} else {",
"  remotes::install_url('https://github.com/kroehne/LogFSM/suites/424716659/artifacts/1397225')",
"  cat('Done.\nType 'library(LogFSM)' to start...')",
"}")
install_script
write(install_script, file = "_site/latest")
install_script <- c("cat('LogFSM - Install\\n\\n')",
"list.of.packages <- c('remotes')",
"new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]",
"if(length(new.packages)) {",
"  cat(paste('Install package(s):',new.packages))",
"  install.packages(new.packages)",
"}",
"osname <- Sys.info()['sysname']",
"ostype <- .Platform$OS.type",
"is64 <- Sys.info()[['machine']] == 'x86_64' || Sys.info()[['machine']] == 'x86-64'",
"if (!is64){ ",
"  cat(paste('LogFSM is not available for:',Sys.info()[['machine']],'\n'))",
"  cat('Installation failed.') ",
"} else {",
"  remotes::install_url('https://github.com/kroehne/LogFSM/suites/424716659/artifacts/1397225')",
"  cat('Done.\nType 'library(LogFSM)' to start...')",
"}")
write(install_script, file = "_site/latest")
??LogFSM
vignette(LogFSM)
vignette(package="LogFSM")
vignette(package="LogFSM")
write(install_script, file = "_site/latest")
source("_site/latest")
install_script <- c("cat('LogFSM - Install\\n\\n')",
"list.of.packages <- c('remotes')",
"new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]",
"if(length(new.packages)) {",
"  cat(paste('Install package(s):',new.packages))",
"  install.packages(new.packages)",
"}",
"osname <- Sys.info()['sysname']",
"ostype <- .Platform$OS.type",
"is64 <- Sys.info()[['machine']] == 'x86_64' || Sys.info()[['machine']] == 'x86-64'",
"if (!is64){ ",
"  cat(paste('LogFSM is not available for:',Sys.info()[['machine']],'\n'))",
"  cat('Installation failed.') ",
"} else {",
"  #remotes::install_url('https://github.com/kroehne/LogFSM/suites/424716659/artifacts/1397225')",
"  cat('Done.\\nType library(LogFSM) to start. \\nFor more information type ??LogFSM or ?vignette(package=\"LogFSM\")')",
"}")
write(install_script, file = "_site/latest")
source("_site/latest")
install_script <- c("cat('LogFSM - Install\\n\\n')",
"list.of.packages <- c('remotes')",
"new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]",
"if(length(new.packages)) {",
"  cat(paste('Install package(s):',new.packages))",
"  install.packages(new.packages)",
"}",
"osname <- Sys.info()['sysname']",
"ostype <- .Platform$OS.type",
"is64 <- Sys.info()[['machine']] == 'x86_64' || Sys.info()[['machine']] == 'x86-64'",
"if (!is64){ ",
"  cat(paste('LogFSM is not available for:',Sys.info()[['machine']],'\n'))",
"  cat('Installation failed.') ",
"} else {",
"  #remotes::install_url('https://github.com/kroehne/LogFSM/suites/424716659/artifacts/1397225')",
"  cat('Done.\\nType library(LogFSM) to start. \\nFor more information type ??LogFSM or ?vignette(package=\"LogFSM\").')",
"}")
write(install_script, file = "_site/latest")
source("_site/latest")
install_script <- c("cat('LogFSM - Install\\n\\n')",
"list.of.packages <- c('remotes')",
"new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,'Package'])]",
"if(length(new.packages)) {",
"  cat(paste('Install package(s):',new.packages))",
"  install.packages(new.packages)",
"}",
"osname <- Sys.info()['sysname']",
"ostype <- .Platform$OS.type",
"is64 <- Sys.info()[['machine']] == 'x86_64' || Sys.info()[['machine']] == 'x86-64'",
"if (!is64){ ",
"  cat(paste('LogFSM is not available for:',Sys.info()[['machine']],'\n'))",
"  cat('Installation failed.') ",
"} else {",
"  #remotes::install_url('https://github.com/kroehne/LogFSM/suites/424716659/artifacts/1397225')",
"  cat('Done.\\nType library(LogFSM) to start. For more information type ??LogFSM or ?vignette(package=\"LogFSM\").')",
"}")
write(install_script, file = "_site/latest")
source("_site/latest")
getwd()
setwd("C:/work/github/LogFSM/")
rmarkdown::render_site(encoding = 'UTF-8')
??render_site
rmarkdown::render_site(encoding = 'UTF-8', input="www/"
)
rmarkdown::render_site(encoding = 'UTF-8', input="www")
?rmarkdown::pandoc_available
date()
cat(paste0("Last update of this page:",date()))
cat(paste0("Last update of this page: ",date()))
