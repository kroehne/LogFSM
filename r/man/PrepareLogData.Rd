% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PrepareLogData.R
\name{PrepareLogData}
\alias{PrepareLogData}
\title{Prepare Log Data from Different Formats for Use with LogFSM}
\usage{
PrepareLogData(
  zipfilename,
  outfilename,
  workingdir,
  verbose = F,
  elements = "",
  datafiletype = "dataflatv01a",
  flags = "",
  outputtimestampformatstring = "dd.MM.yyyy hh:mm:ss.fff tt",
  outputrelativetimeformatstring = "hh':'mm':'ss':'fff",
  ...
)
}
\arguments{
\item{zipfilename}{Name of the file containing the raw log data that should be used with LogFSM. 'PrepareLogData' will read from this file.}

\item{outfilename}{Name of the file in which 'PrepareLogData' will write the prepared log data.}

\item{workingdir}{Working directory (optional).}

\item{verbose}{Requesting more detailed output from LogFSM.}

\item{elements}{A string variable referring to the element names (i.e., items, units, or tasks) that should be extracted. Multiple elements can be combinded using ';'.}

\item{datafiletype}{Type of the data provided in the file \code{zipfilename} (either \code{dataflatv01a} or \code{piaaczip01a})}

\item{flags}{Optional flags as documented for the specific data formats. The flag "RELATIVETIME" can be used to prepare log data provided with relative timestamps. Multiple flags can be combined in the string variable using the pipe (|).}

\item{outputtimestampformatstring}{Format string for timestamps in the output (default: "dd.MM.yyyy hh:mm:ss.fff tt")}

\item{outputrelativetimeformatstring}{Format string for relative times in the output (default: "hh':'mm':'ss':'fff")}

\item{...}{(Further arguments will be passed on if necessary)}
}
\value{
The function returns TRUE if a file was created.
}
\description{
Log data originating from different assessment platforms or data sources can be used with the LogFSM package with the help of the function \code{PrepareLogData}.
\code{PrepareLogData} will convert the data from a supported data format into the internal LogFSM representation (\code{logfsmjson}), which can be used for decomposing test-taking processes with the function \code{RunFSMSyntax}.
}
\details{
Data formats that require pre-processing using the function \code{PrepareLogData}
to create the \code{logfsmjson}(i.e. data that can be used with \code{RunFSMSyntax}) are:
\itemize{
\item \code{dataflatv01a}: Flat table with log data (i.e., flat and sparse log data table)
\item \code{piaacldazip01a}: Text file with log data from the 'Programme for the International Assessment of Adult Competencies (PIAAC)', Round 1, exported from PIAAC LogDataAnalyzer (LDA)
\item \code{nepszip01a}: ZIP archive with data in the universal log data format used in the National Educational Panel Study (NEPS, TBT-studies 2009-2020)
}

If data are provided as  \code{dataflatv01a}, the following columns are expected:
\itemize{
\item \code{PersonIdentifier}: Identifier for the test-taker / person / student
\item \code{EventName}: Name of the log event
\item \code{Element}: Item, unit, task (part of the assessment) to which the event belongs
\item \code{TimeStamp} or \code{RelativeTime}: Timestamp (or relative time, if the flag \code{RELATIVETIME} is used)
}

If data are provided as  \code{nepszip01a}, the following columns are expected:
\itemize{
\item \code{PersonIdentifier}:  Identifier for the test-taker / person / student. This default can be overwritten by providing an additional argument 'ColumnNamePersonIdentifier,' which specifies the name of the column that contains the person identifier.
\item \code{EventName}: Name of the log event. This default can be overwritten by providing an additional argument 'ColumnNameEventName,' which specifies the name of the column that contains the event name (resp. event type).
\item \code{Element}: Item, unit, task (part of the assessemnt) to which the event belongs. This default can be overwritten by providing an additional argument 'ColumnNameElement,' which specifies the name of the column that contains the element (item name, unit name, etc.).
\item \code{TimeStamp} or \code{RelativeTime}: Timestamp (Absolut time stamps are expected. For relative times, use the flag \code{RELATIVETIME}. This default can be overwritten by providing an additional argument 'ColumnNameTimeStamp,' which specifies the name of the column that contains the timestamp.
}

For more details about the workflow see the vignette \emph{LogFSM Workflows (Overview)}:
\code{vignette("Workflow", package = "LogFSM")}

Additional formats (under development)
\itemize{
\item \code{pisabqzip01a} / \code{pisabqzip01b} / \code{pisabqzip01c} / \code{pisacazip01a}
}
}
