% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TransformToUniversalLogFormat.R
\name{TransformToUniversalLogFormat}
\alias{TransformToUniversalLogFormat}
\title{Transform Log Data with LogFSM}
\usage{
TransformToUniversalLogFormat(
  inputfolders,
  stataoutput = "",
  zcsvoutput = "",
  xlsxoutput = "",
  xesoutput = "",
  spssoutput = "",
  inputformat = "",
  mask = "",
  verbose = F,
  excludedelements = "",
  table = "",
  dictionary = "",
  codebook = "",
  logversion = "default",
  flags = "",
  ...
)
}
\arguments{
\item{inputfolders}{Input folder to be processed.}

\item{stataoutput}{Output file name for the generated universal log format, type Stata (i.e., absolute path to the zip file containing log data as Stata files, one file for each event type).}

\item{zcsvoutput}{Output file name for the generated universal log format, type zip-compressed CSV (i.e., absolute path to the zip file containing log data as CSV files, one file for each event type).}

\item{xlsxoutput}{Output file name for the generated universal log format, type XLSX (i.e., absolute path to XLSX file containing log data, one sheet for each event type).}

\item{xesoutput}{Output file name for the generated log file, type XES (i.e., absolute path to the XES file containing log data as .gzip file, if flag SERIALIZERAWXML is not provided, or as .xml file otherwise).}

\item{spssoutput}{Output file name for the generated universal log format, type SPSS / PSPP (i.e., absolute path to the zip file containing log data as SPSS / PSPP files, one file for each event type).}

\item{inputformat}{File format of the raw log data to be processed (see above for valid options).}

\item{mask}{File filter mask. Only files that match the specified mask will be used (e.g., *.jsonl).}

\item{verbose}{Request verbose output messages.}

\item{excludedelements}{A string variable referring to the element names (i.e., items, units or tasks), that should be ignored.}

\item{table}{Concordance table file name (Stata, XLSX or CSV file). If the file exists and has two columns (PersonIdentifierOld and PersonIdentifierNew) it is used as a constants table. If a file name is specified that does not exist, a template for a concordance table is created.}

\item{dictionary}{Dictionary file for the creation of an integrated codebook.}

\item{codebook}{Codebook file name (XLSX file). An XLSX file is created, which documents the generated log data as a codebook in universal log format.}

\item{logversion}{Version information about the raw data (see below).}

\item{flags}{Optional flags to be used for the specific transformation. Multiple flags can be combined using - as the separator.}

\item{...}{(Further arguments will be passed on if necessary)}
}
\value{
The function returns TRUE, if a file was created.
}
\description{
LogFSM provides a function for transforming raw log data files (from different supported sources) to the universal log format, the flat and spares log data table or into the XES format.
}
\details{
The transformation of log data from different platforms using the function 'TransformToUniversalLogFormat' is available for the
following source formats:
\itemize{
\item \code{ibsdraw01a}: Data stored as jsonl files as provided by the online deployment software ItemBuilder Static Delivery (IBSD). IBSD, provided by DIPF/TBA, can be used for CBA ItemBuilder >= 8.12, REACT).
\item \code{irtlibv01a}: Data stored as zip archives as provided by the deployment software IRTlib. IRTlib, provided by DIPF/TBA, can be used for CBA ItemBuilder > 8.12, REACT).
}

The following formats are experimental and under development:
\itemize{
\item \code{taopci01a}: CSV files exported from TAO using https://github.com/DIPFtba/fastib2pci
\item \code{ibfirebase01a}: Data stored in a firebase database by an experimental firebase hosting for CBA ItemBuilder items.
}

The following formats are outdated:
\itemize{
\item \code{eeibraprawv01a}: Folder(s) with ZIP archives or XML files created with the CBA ItemBuilder Execution Environment (EE, provided by DIPF/TBA, CBA ItemBuilder <= 8.12, RAP).
}

The following formats are specific to particular assessment programs:
\itemize{
\item \code{nepsrawv01a}: Folder(s) with extracted output files from NEPS TBT modules (created by DIPF/TBA).
\item \code{piaacr1txt01a}:  PIAAC Round 1, TXT files with preprocessed raw log data from https://piaac-logdata.tba-hosting.de
}

The following flags are supported:
\itemize{
\item NUMERICPERSONIDENTIFIER: The person identifier is created as numeric variable (instead of the default, a string variable).
}

The following optional parameters can be provided in LogFSM:
\itemize{
\item \code{PersonIdentifier}: Specify the name of the column that contains the person identifiers (default is 'PersonIdentifier').
}

A command-line tool to be used outside of R is also provided (see https://github.com/kroehne/LogFSM/wiki/Command-line-tool-TransformToUniversalLogFormat).
}
